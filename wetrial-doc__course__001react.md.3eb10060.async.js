(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[72],{iFOl:function(e,a,n){"use strict";n.r(a);var t=n("q1tI"),l=n.n(t),r=(n("B2uJ"),n("+su7"),n("qOys")),c=n.n(r);n("5Yjd");a["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h1",{id:"react-basics"},l.a.createElement("a",{"aria-hidden":"true",href:"#react-basics"},l.a.createElement("span",{className:"icon icon-link"})),"React basics"),l.a.createElement("h3",{id:"fchook"},l.a.createElement("a",{"aria-hidden":"true",href:"#fchook"},l.a.createElement("span",{className:"icon icon-link"})),"FC(Hook)"),l.a.createElement("p",null,"Functional Components(FC) vs Class: There are three different ways to create React Component, ",l.a.createElement("code",null,"React.createClass")," is ES5 not hard to code, then React release new ",l.a.createElement("code",null,"class")," and ",l.a.createElement("code",null,"Stateless Functional Component")," to ues With Es6 it more easier. But for now class component become rarely use instead by ",l.a.createElement("code",null,"Stateless Functional Component"),". because of React release new feature call hook. What is different between ",l.a.createElement("code",null,"Class and Stateless"),". Notice that ",l.a.createElement("code",null,"Stateless Functional Component")," is not a Object, it's functional programming, a pure function, ",l.a.createElement("code",null,"without state")," but after release hook we can use ",l.a.createElement("code",null,"state inside it"),", but still no use for ",l.a.createElement("code",null,"this")," keyword."),l.a.createElement("p",null,"To define App Component for instance:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("p",null,"Functional Component with state hook (it have style type in FC component)")),l.a.createElement("li",null,l.a.createElement("p",null,l.a.createElement("code",null,"function JS style")))),l.a.createElement(c.a,{code:"function App() {\n  return <div>Hello FC</div>;\n}\n",lang:"javascript"}),l.a.createElement("ul",null,l.a.createElement("li",null,"JS ",l.a.createElement("code",null,"Es6 style"))),l.a.createElement(c.a,{code:"const App = () => {\n  return <div>Hello FC ES6</div>;\n};\n",lang:"javascript"}),l.a.createElement("ul",null,l.a.createElement("li",null,"JS ",l.a.createElement("code",null,"Es6 style with without ","{}")," it is es6 shorthand")),l.a.createElement(c.a,{code:"const App = () => <div>Hello FC ES6</div>;\n",lang:"javascript"}),l.a.createElement("h3",{id:"class-component"},l.a.createElement("a",{"aria-hidden":"true",href:"#class-component"},l.a.createElement("span",{className:"icon icon-link"})),"Class Component:"),l.a.createElement(c.a,{code:'class App extends React.Component {\n  this.state ={\n    name: "Jonh"\n  }\n  handleClick() {\n   this.state({\n     name:"Sila"\n   })\n  }\n\n  render() {\n    return <div onClick={this.handleClick.bind(this)}>${this.props.name}</div>;\n  }\n}\n',lang:"javascript"}),l.a.createElement("h3",{id:"jsx"},l.a.createElement("a",{"aria-hidden":"true",href:"#jsx"},l.a.createElement("span",{className:"icon icon-link"})),"JSX"),l.a.createElement("h4",{id:"component-composition"},l.a.createElement("a",{"aria-hidden":"true",href:"#component-composition"},l.a.createElement("span",{className:"icon icon-link"})),"Component Composition"),l.a.createElement("p",null,"Similar to HTML tag, Components can be nested in JSX."),l.a.createElement(c.a,{code:"<App>\n  <header />\n  <MainContent />\n  <footer />\n</App>\n",lang:"html"}),l.a.createElement("h4",{id:"note-react-component-support-only-only-one-html-element"},l.a.createElement("a",{"aria-hidden":"true",href:"#note-react-component-support-only-only-one-html-element"},l.a.createElement("span",{className:"icon icon-link"})),"Note: React Component support only only one html element"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"Error case"))),l.a.createElement(c.a,{code:"const App = () => {\n  return (\n    //it have two element div cause the error jsx\n    <div>Hello FC ES6</div>;\n    <div>Hello FC ES6</div>;\n  )\n};\n",lang:"javascript"}),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"Correct case"))),l.a.createElement(c.a,{code:"\nconst App = () => {\n  return (\n    <div> // it can be any element or wrapped to one element\n      <div>Hello FC ES6</div>;\n      <div>Hello FC ES6</div>;\n    <div>\n  )\n};\n",lang:"javascript"}),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"Better case")," use Fragment to reduce useless div")),l.a.createElement(c.a,{code:"const App = () => {\n  return (\n    <> //<> it Fragment shorthand of <React.Fragment>\n      <div>Hello FC ES6</div>;\n      <div>Hello FC ES6</div>;\n    </>\n  )\n};\n",lang:"javascript"}),l.a.createElement("h4",{id:"classname"},l.a.createElement("a",{"aria-hidden":"true",href:"#classname"},l.a.createElement("span",{className:"icon icon-link"})),"className"),l.a.createElement("p",null,"Please beware using ",l.a.createElement("code",null,"className")," instead of ",l.a.createElement("code",null,"class")," for JSX styling, as ",l.a.createElement("code",null,"class")," is preserved in JavaScript."),l.a.createElement(c.a,{code:'<h1 className="fancy">Hello dva</h1>\n',lang:"html"}),l.a.createElement("h4",{id:"javascript-expressions"},l.a.createElement("a",{"aria-hidden":"true",href:"#javascript-expressions"},l.a.createElement("span",{className:"icon icon-link"})),"JavaScript Expressions"),l.a.createElement("p",null,"JavaScript expressions are wrapped inside pairs of curly brackets",l.a.createElement("code",null,"{}")," for JSX, it will execute and return."),l.a.createElement("p",null,"For example:"),l.a.createElement(c.a,{code:"<h1>{this.props.title}</h1>\n",lang:"javascript"}),l.a.createElement("h4",{id:"mapping-arrays-to-jsx"},l.a.createElement("a",{"aria-hidden":"true",href:"#mapping-arrays-to-jsx"},l.a.createElement("span",{className:"icon icon-link"})),"Mapping Arrays to JSX"),l.a.createElement("p",null,"Here is a way to map an array to JSX:"),l.a.createElement(c.a,{code:"<ul>\n  {this.props.todos.map((todo, i) => (\n    <li key={i}>{todo}</li>\n  ))}\n</ul>\n",lang:"javascript"}),l.a.createElement("h4",{id:"comments-in-jsx"},l.a.createElement("a",{"aria-hidden":"true",href:"#comments-in-jsx"},l.a.createElement("span",{className:"icon icon-link"})),"Comments in JSX"),l.a.createElement("p",null,"Avoid using ",l.a.createElement("code",null,"//")," for single line comments."),l.a.createElement(c.a,{code:"<h1>\n  {/* multiline comment */}\n  {/*\n    multi\n    line\n    comment\n    */}\n  {\n    // single line\n  }\n  Hello\n</h1>\n",lang:"javascript"}),l.a.createElement("h4",{id:"spread-attributes"},l.a.createElement("a",{"aria-hidden":"true",href:"#spread-attributes"},l.a.createElement("span",{className:"icon icon-link"})),"Spread Attributes"),l.a.createElement("p",null,"A quite useful feature that JSX borrowed from ECMAScript6, using Spread Operator to extend Component's props."),l.a.createElement("p",null,"For instance:"),l.a.createElement(c.a,{code:"const attrs = {\n  href: 'http://example.org',\n  target: '_blank',\n};\n<a {...attrs}>Hello</a>;\n",lang:"javascript"}),l.a.createElement("p",null,"Equivalents to:"),l.a.createElement(c.a,{code:"const attrs = {\n  href: 'http://example.org',\n  target: '_blank',\n};\n<a href={attrs.href} target={attrs.target}>\n  Hello\n</a>;\n",lang:"javascript"}),l.a.createElement("h3",{id:"props"},l.a.createElement("a",{"aria-hidden":"true",href:"#props"},l.a.createElement("span",{className:"icon icon-link"})),"Props"),l.a.createElement("p",null,"Data handling is a key concept in React and it can be overwhelming for beginners. Data handles through ",l.a.createElement("code",null,"props"),", ",l.a.createElement("code",null,"state")," or ",l.a.createElement("code",null,"context")," in React. But when using dva.js, all you need is just ",l.a.createElement("code",null,"props"),", one of strengths that dva.js provides over React."),l.a.createElement(c.a,{code:'//component function\nfunction App(props) {\n  const { name="Jonh" } = props; // Destructing from props\n  // Jonh is Default value of props name\n  return <div>Hello {name}</div>;\n}\n\n//used component normal style\n<App name="Sila">\n//output: Hello Sila\n\n',lang:"javascript"}),l.a.createElement("h4",{id:"proptypes"},l.a.createElement("a",{"aria-hidden":"true",href:"#proptypes"},l.a.createElement("span",{className:"icon icon-link"})),"propTypes"),l.a.createElement("p",null,"Since JavaScript is weakly typed, please declare props' types using propTypes for type validation."),l.a.createElement(c.a,{code:"function App(props) {\n  return <div>{props.name}</div>;\n}\nApp.propTypes = {\n  name: React.PropTypes.string.isRequired,\n};\n",lang:"javascript"}),l.a.createElement("p",null,"Built-in props type:"),l.a.createElement("ul",null,l.a.createElement("li",null,"PropTypes.array"),l.a.createElement("li",null,"PropTypes.bool"),l.a.createElement("li",null,"PropTypes.func"),l.a.createElement("li",null,"PropTypes.number"),l.a.createElement("li",null,"PropTypes.object"),l.a.createElement("li",null,"PropTypes.string")),l.a.createElement("h4",{id:"passing-data-from-parent-to-child"},l.a.createElement("a",{"aria-hidden":"true",href:"#passing-data-from-parent-to-child"},l.a.createElement("span",{className:"icon icon-link"})),"Passing data from parent to child"),l.a.createElement("p",null,l.a.createElement("img",{src:"https://zos.alipayobjects.com/rmsportal/NAzeMyUoPMqxfRv.png"})),l.a.createElement("h4",{id:"passing-data-from-child-to-parent"},l.a.createElement("a",{"aria-hidden":"true",href:"#passing-data-from-child-to-parent"},l.a.createElement("span",{className:"icon icon-link"})),"Passing data from child to parent"),l.a.createElement("p",null,l.a.createElement("img",{src:"https://zos.alipayobjects.com/rmsportal/fiKKgDGuEJfSvxv.png"})),l.a.createElement("h3",{id:"css-modules"},l.a.createElement("a",{"aria-hidden":"true",href:"#css-modules"},l.a.createElement("span",{className:"icon icon-link"})),"CSS Modules"),l.a.createElement("img",{src:"https://zos.alipayobjects.com/rmsportal/mHVRpjNYhVuFdsS.png",width:"150",style:{background:"#fff"}}),l.a.createElement("h4",{id:"understanding-css-modules"},l.a.createElement("a",{"aria-hidden":"true",href:"#understanding-css-modules"},l.a.createElement("span",{className:"icon icon-link"})),"Understanding CSS Modules"),l.a.createElement("p",null,"Visual illustration of CSS Modules mechanism:"),l.a.createElement("p",null,l.a.createElement("img",{src:"https://zos.alipayobjects.com/rmsportal/SWBwWTbZKqxwEPq.png"})),l.a.createElement("p",null,l.a.createElement("code",null,"button")," class will be renamed to ",l.a.createElement("code",null,"ProductList_button_1FU0u")," after execution, ",l.a.createElement("code",null,"button")," is a local name, ",l.a.createElement("code",null,"ProductList_button_1FU0u")," is the global name. ",l.a.createElement("strong",null,"so you can use simple descriptive name, without worrying about conflict")),l.a.createElement("p",null,"After that, all you need to do is create related styles of ",l.a.createElement("code",null,".button ","{","...","}")," in css/less file, import and refer it by calling ",l.a.createElement("code",null,"styles.button"),"."),l.a.createElement("h4",{id:"defining-global-css"},l.a.createElement("a",{"aria-hidden":"true",href:"#defining-global-css"},l.a.createElement("span",{className:"icon icon-link"})),"Defining Global CSS"),l.a.createElement("p",null,"CSS Modules are default to local scopes, to declare a global style, using ",l.a.createElement("code",null,":global")," syntax"),l.a.createElement("p",null,"For example:"),l.a.createElement(c.a,{code:".title {\n  color: red;\n}\n:global(.title) {\n  color: green;\n}\n",lang:"css"}),l.a.createElement("p",null,"Calling by:"),l.a.createElement(c.a,{code:'<App className={styles.title} /> // red\n<App className="title" />        // green\n',lang:"javascript"}),l.a.createElement("h4",{id:"classnames-package"},l.a.createElement("a",{"aria-hidden":"true",href:"#classnames-package"},l.a.createElement("span",{className:"icon icon-link"})),l.a.createElement("code",null,"classnames")," Package"),l.a.createElement("p",null,"When dealing with some complex situations, each element can have multiple ",l.a.createElement("code",null,"className")," and each ",l.a.createElement("code",null,"className")," may also conditional dependent, when this is the case, ",l.a.createElement("a",{href:"https://github.com/jedwatson/classnames",target:"_blank",rel:"noopener noreferrer"},"classnames",l.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":!0,x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},l.a.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),l.a.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})))," library will be handy."),l.a.createElement(c.a,{code:"import classnames from 'classnames';\nconst App = (props) => {\n  const cls = classnames({\n    btn: true,\n    btnLarge: props.type === 'submit',\n    btnSmall: props.type === 'edit',\n  });\n  return <div className={cls} />;\n};\n",lang:"javascript"}),l.a.createElement("p",null,"Thus will create different ",l.a.createElement("code",null,"className")," when passing different types to App Component"),l.a.createElement(c.a,{code:'<App type="submit" /> // btn btnLarge\n<App type="edit" />   // btn btnSmall\n',lang:"javascript"}),l.a.createElement("h2",{id:"tsx-syntax"},l.a.createElement("a",{"aria-hidden":"true",href:"#tsx-syntax"},l.a.createElement("span",{className:"icon icon-link"})),"tsx syntax"),l.a.createElement("h2",{id:"the-life-cycle"},l.a.createElement("a",{"aria-hidden":"true",href:"#the-life-cycle"},l.a.createElement("span",{className:"icon icon-link"})),"The life cycle"),l.a.createElement("h2",{id:"data-flow"},l.a.createElement("a",{"aria-hidden":"true",href:"#data-flow"},l.a.createElement("span",{className:"icon icon-link"})),"data flow"),l.a.createElement("h2",{id:"hooks"},l.a.createElement("a",{"aria-hidden":"true",href:"#hooks"},l.a.createElement("span",{className:"icon icon-link"})),"hooks")))}}}]);