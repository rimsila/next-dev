(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[55],{HULk:function(e,t,n){"use strict";n.r(t);var a=n("q1tI"),l=n.n(a),o=(n("B2uJ"),n("+su7"),n("qOys")),s=n.n(o);n("5Yjd");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h1",{id:"change-theme-online"},l.a.createElement("a",{"aria-hidden":"true",href:"#change-theme-online"},l.a.createElement("span",{className:"icon icon-link"})),"Change theme online"),l.a.createElement("p",null,"In the v4 version of pro, an online theme change function has been added. The original intention of this function is to allow designers to modify the main color of Ant Design more quickly, and preview it directly to save developers time. However, due to the immaturity of the solution, many students encountered problems during development, but they were unable to troubleshoot the problems. A lot of time was wasted in vain, so we wrote this short article to explain our implementation plan and why it caused this problem."),l.a.createElement("h2",{id:"background"},l.a.createElement("a",{"aria-hidden":"true",href:"#background"},l.a.createElement("span",{className:"icon icon-link"})),"Background"),l.a.createElement("p",null,"In order to simplify the use of less in Pro, ",l.a.createElement("a",{href:"https://github.com/css-modules/css-modules",target:"_blank",rel:"noopener noreferrer"},l.a.createElement("code",null,"css-module")," ",l.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":!0,x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},l.a.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),l.a.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})))," is enabled. If used in a project, ",l.a.createElement("code",null,"css-module")," is a great Features, it can solve the problem that plagues every programmer, how to make a meaningful but not repeated css class name."),l.a.createElement("p",null,"But for the component css-module will increase the cost, if you want to keep the less source code when releasing the component, it will be more troublesome. First of all, even if you don't keep less. The class name of the component changes every time. In this way, you cannot use CSS to modify the style of the component."),l.a.createElement("blockquote",null,l.a.createElement("p",null,"Some components that do not want to be modified can use ",l.a.createElement("code",null,"css-module"),", each version is a new className, effectively preventing tampering.")),l.a.createElement("p",null,"The plug-in for online theme change is mainly realized by compiling less in the browser. First, he finds all the less of the project and extracts the selector with less variables. Combine it into a new less, which is color.less, and compile it with less.js in the browser, and then overwrite the original attributes. It is completed by the following three steps:"),l.a.createElement("h2",{id:"merge-less"},l.a.createElement("a",{"aria-hidden":"true",href:"#merge-less"},l.a.createElement("span",{className:"icon icon-link"})),"Merge less"),l.a.createElement("p",null,"This function is mainly realized by a plug-in, ",l.a.createElement("code",null,"antd-pro-merge-less"),", this plug-in will scan all the less in src and merge them into one ",l.a.createElement("code",null,"./temp/ant-design-pro.ess"),", this Plug-ins are also the most problematic plug-ins, which will cause some less references to become invalid."),l.a.createElement("h2",{id:"convert-css-module"},l.a.createElement("a",{"aria-hidden":"true",href:"#convert-css-module"},l.a.createElement("span",{className:"icon icon-link"})),"Convert css-module"),l.a.createElement("p",null,"But as a plug-in that changes the theme, it is necessary to ensure that the class name is fixed, but not repeated. We performed two treatments. First, the class name is customized. This can be done easily by using the api ",l.a.createElement("code",null,"getLocalIdent")," of ",l.a.createElement("code",null,"css-module"),". This is how pro handles it."),l.a.createElement(s.a,{code:"const getLocalIdent = (context, localIdentName, localName) => {\n  if (\n    context.resourcePath.includes('node_modules') ||\n    context.resourcePath.includes('ant.design.pro.less') ||\n    // umi's global.less convention does not use css-module\n    context.resourcePath.includes('global.less')\n  ) {\n    return localName;\n  }\n\n  // Convert the class name of uuid to the style of antd-pro-file path.\n  // similar. antd-pro-components-global-footer-index-links\n  const match = context.resourcePath.match(/src(.*)/);\n  if (match && match[1]) {\n    const antdProPath = match[1].replace('.less', '');\n    const arr = slash(antdProPath)\n      .split('/')\n      .map((a) => a.replace(/([A-Z])/g, '-$1'))\n      .map((a) => a.toLowerCase());\n    return `antd-pro${arr.join('-')}-${localName}`.replace(/--/g, '-');\n  }\n  return localName;\n};\n",lang:"js"}),l.a.createElement("p",null,"In this way, as long as the class name is generated in the same way when extracting less, it can be guaranteed that the two are the same."),l.a.createElement("blockquote",null,l.a.createElement("p",null,l.a.createElement("a",{href:"https://www.npmjs.com/package/postcss-less-engine",target:"_blank",rel:"noopener noreferrer"},l.a.createElement("code",null,"postcss-less-engine")," ",l.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":!0,x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},l.a.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),l.a.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})))," is used here, you can generate less syntax tree and modify it.")),l.a.createElement("h2",{id:"extract-less-variables"},l.a.createElement("a",{"aria-hidden":"true",href:"#extract-less-variables"},l.a.createElement("span",{className:"icon icon-link"})),"Extract less variables"),l.a.createElement("p",null,"This step is done through ",l.a.createElement("code",null,"antd-theme-webpack-plugin"),". It traverses the syntax tree of less, extracts all selectors with less variables in the configuration, and combines them into a color.less file. ",l.a.createElement("a",{href:"git://github.com/mzohaibqc/antd-theme-generator",target:"_blank",rel:"noopener noreferrer"},"antd-theme-generator",l.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":!0,x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},l.a.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),l.a.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})))," can view the specific implementation."),l.a.createElement("p",null,"After extracting color.less, add the introduction of less to the html generated by the build through the ability of webpack. The default is"),l.a.createElement(s.a,{code:'<script\n  type="text/javascript"\n  src="https://gw.alipayobjects.com/os/lib/less.js/3.8.1/less.min.js"\n><\/script>\n',lang:"html"}),l.a.createElement("p",null,"When you need to change the theme, you can compile the referenced less by calling ",l.a.createElement("code",null,"window.less.modifyVars"),"."),l.a.createElement(s.a,{code:"// Because the compilation time is too long and will block the rendering, please add hints.\nwindow.less\n  .modifyVars({\n    '@primary-color': primaryColor,\n  })\n  .then(() => {\n    // compile successfully\n  })\n  .catch(() => {\n    // compilation failed\n  });\n",lang:"js"}),l.a.createElement("h2",{id:"existing-problems"},l.a.createElement("a",{"aria-hidden":"true",href:"#existing-problems"},l.a.createElement("span",{className:"icon icon-link"})),"Existing problems"),l.a.createElement("p",null,"Using the above scheme can realize the function of changing the theme online, but at the same time introduce some new problems. Therefore, we do not recommend using it in a production environment. He will be perfected again in Pro v4."),l.a.createElement("p",null,"First of all, ",l.a.createElement("code",null,"antd-pro-merge-less")," will cause part of the introduction of less to fail. And it is difficult to troubleshoot. Compiling, merging and extracting less will cause the hot update speed to slow down or freeze during development. These will affect the development experience. Secondly, compiling less in the browser is not a very good solution. The compilation of less will cause the main process of the browser to freeze, which shows that the entire page is stuck. The experience is very poor."),l.a.createElement("p",null,"The way ",l.a.createElement("code",null,"antd-theme-webpack-plugin")," extracts variables also has some problems. The compiled css does not perform well in small details. It is far less perfect than modifying it in webpack compilation."),l.a.createElement("h2",{id:"future-improvements"},l.a.createElement("a",{"aria-hidden":"true",href:"#future-improvements"},l.a.createElement("span",{className:"icon icon-link"})),"Future improvements"),l.a.createElement("p",null,"The current online theme change is a demo program, which has some problems and is not suitable for adapting in a formal environment. We will improve his performance in v4. First, use a more elegant solution to merge and extract less. Supports the full features of less, so that it will not cause pits in the development, but will reduce the impact on the development experience."),l.a.createElement("p",null,"The extraction variable algorithm in ",l.a.createElement("code",null,"antd-theme-webpack-plugin")," will also be optimized to speed up, and will not be extracted after compiling once. In a formal environment, multiple copies of css will be compiled and dynamically imported css to change themes, which is smoother. The experience is better. At the same time, the plug-ins are merged. Now the three plug-ins are seriously coupled and do not support hot-plugging and downgrading schemes.")))}}}]);